{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[{"title":"关于","date":"2019-10-26T15:01:00.907Z","updated":"2019-10-26T15:01:00.907Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"书单","date":"2019-10-26T15:01:00.909Z","updated":"2019-10-26T15:01:00.909Z","comments":false,"path":"books/index.html","permalink":"http://yoursite.com/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2019-10-28T01:43:09.195Z","updated":"2019-10-28T01:43:09.195Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2021-06-07T04:55:49.094Z","updated":"2019-10-26T15:01:00.913Z","comments":true,"path":"links/index.html","permalink":"http://yoursite.com/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2019-10-26T15:01:00.915Z","updated":"2019-10-26T15:01:00.915Z","comments":false,"path":"repository/index.html","permalink":"http://yoursite.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-10-26T15:01:00.918Z","updated":"2019-10-26T15:01:00.918Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"江西旅游","slug":"江西旅游","date":"2021-06-07T09:09:34.000Z","updated":"2021-06-07T09:53:23.958Z","comments":true,"path":"2021/06/07/江西旅游/","link":"","permalink":"http://yoursite.com/2021/06/07/%E6%B1%9F%E8%A5%BF%E6%97%85%E6%B8%B8/","excerpt":"","text":"南京南站——&gt;婺源站：270.5，3小时32分（高铁）婺源站——&gt;景德镇北：24元，27分，(高铁)景德镇北——&gt;庐山站：56.5元，1小时39分，（高铁）庐山站——&gt;南昌西站：36元，42分（高铁）南昌西站——&gt;鹰潭北站：60.5元，50分（高铁）鹰潭北站——&gt;上饶站：46.5元，26分（高铁）上饶客运东站——&gt;三清山：27元，1.5小时（汽车）三清山——&gt;婺源：30元，6小时，73公里（汽车）婺源站——&gt;南京南：270，3小时43分（高铁）第一站：婺源（篁岭、江岭、李坑）南京南站——&gt;婺源站：270.5，3小时32分（高铁）篁岭：婺源北站有汽车到篁岭25元左右江岭：三四月份看油菜花，过了这个季节就没啥玩了李坑：徽派建筑古镇第二站：景德镇（御窑、古窑、瓷碗、陶溪川、浮梁古县衙、瑶里古镇）婺源站——&gt;景德镇北站：24元，27分（高铁）古窑博物馆、古窑绿地昌南里看瓷碗陶溪川夜景浮梁古县衙瑶里古镇：比较远，距北站40公里了第三站：九江市（龙源峡、石门涧、庐山西海、庐山）景德镇北——&gt;庐山站：56.5元，1小时39分，（高铁）龙源峡：类似九寨沟石门涧：庐山第一景庐山西海：金沙滩第四站：南昌（滕王阁、万寿宫、凡尔赛宫、699文化园、卢塞恩小镇、双子塔、南昌之心）庐山站——&gt;南昌西站：36元，42分（高铁）滕王阁：四点过后看夜景万寿宫：繁华商街第五站：鹰潭市（龙虎山）南昌西站——&gt;鹰潭北站：60.5元，50分（高铁）龙虎山：乘坐鹰潭北站到金溪的车，首末帮车：8:30-20:00，间隔30分钟，票价10元第六站：上饶市（三清山）鹰潭北站——&gt;上饶站：46.5元，26分（高铁）上饶站旁边的上饶汽车东站直达三清山,约1.5小时到达，票价27元总计：车票最低1100","categories":[],"tags":[{"name":"杂技","slug":"杂技","permalink":"http://yoursite.com/tags/%E6%9D%82%E6%8A%80/"}]},{"title":"工厂设计模式","slug":"工厂设计模式","date":"2019-11-02T09:59:32.000Z","updated":"2019-11-02T09:59:32.937Z","comments":true,"path":"2019/11/02/工厂设计模式/","link":"","permalink":"http://yoursite.com/2019/11/02/%E5%B7%A5%E5%8E%82%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"装饰者模式与适配器模式","slug":"装饰者模式与适配器模式","date":"2019-10-31T09:05:07.000Z","updated":"2019-11-25T07:33:38.708Z","comments":true,"path":"2019/10/31/装饰者模式与适配器模式/","link":"","permalink":"http://yoursite.com/2019/10/31/%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F%E4%B8%8E%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/","excerpt":"","text":"1.装饰者模式与适配器模式的区分装饰者模式是对一个类功能的增强，装饰类需与被装饰类实现相同的接口。适配器模式是包装一个与目标接口毫无关系的类，目的是使那个类可以被目标接口所调用。2.示例：2.1.装饰者我们都知道丑小鸭与白天鹅的故事，丑小鸭在没有长大之前是一个十分丑的样子，如果现在我们希望使用装饰者模式，来增强丑小鸭应该怎么做呢。首先我们来看实现类图1.首先我们定义被装饰类，丑小鸭开始具有自己的行为，比如声音怎么叫，会不会飞，外貌长什么样，我们可以这样来定义丑小鸭类12345678910111213141516public class UglyDuck implements Swan&#123; @Override public void cry() &#123; System.out.println(&quot;嘎嘎叫&quot;); &#125; @Override public void fly() &#123; System.out.println(&quot;丑小鸭还不能飞&quot;); &#125; @Override public void desAppearance() &#123; System.out.println(&quot;丑小鸭很丑&quot;); &#125;&#125;2.装饰者类需要与被装饰类实现共同的接口，这样装饰类才能拥有被装饰类所有的方法这时我们选哟将被装饰类的方法抽取成一个接口12345public interface Swan &#123; void cry(); void fly(); void desAppearance();&#125;3.现在来定义装饰类，必须实现接口，这样才能保证我这个类拥有被装饰类的所有行为,我们将需要被装饰的类作为参数传进来，这个时候我们发现此类实现的方法和被装饰类完全相同1234567891011121314151617181920212223public class Decorator implements Swan &#123; //装饰的对象是谁 private Swan swan; public Decorator(Swan swan) &#123; this.swan = swan; &#125; @Override public void cry() &#123; swan.cry(); &#125; @Override public void fly() &#123; swan.fly(); &#125; @Override public void desAppearance() &#123; swan.desAppearance(); &#125;&#125;4.那我们应该如何增强被装饰类呢，这个时候我们定义一个类去继承装饰类，此时我们需要增强哪个方法，就重写此方法。12345678910public class FlyDecorator extends Decorator &#123; public FlyDecorator(Swan swan) &#123; super(swan); &#125; @Override public void fly() &#123; System.out.println(&quot;变成白天鹅可以飞了&quot;); &#125;&#125;5.测试类1234567891011121314151617public class Test &#123; public static void main(String[] args) &#123; Swan duck=new UglyDuck(); System.out.println(duck); System.out.println(&quot;没有装饰前-----&quot;); duck.cry(); duck.fly(); duck.desAppearance(); System.out.println(&quot;装饰后-----&quot;); duck=new CryDecorator(duck); duck=new FlyDecorator(duck);; duck = new AppeaDecorator(duck); duck.cry(); duck.fly(); duck.desAppearance(); &#125;&#125;2.2适配器问题：目标接口(Target)期待调用request方法，而源类(Adaptee)中并没有，这就是所谓的不兼容解决：为了使Targe能够使用Adaptee类里的specialRequest方法，可以提供一个中间类Adapter类此类要继承源类实现目标类1.创建目标接口12345public interface Target &#123; //这是源类Adapteee没有的方法 public void Request(); &#125;2.创建源类12345public class Adaptee &#123; public void SpecificRequest()&#123; &#125;&#125;3.创建适配器类12345678910111213//适配器Adapter继承自Adaptee，同时又实现了目标(Target)接口。public class Adapter extends Adaptee implements Target &#123; //目标接口要求调用Request()这个方法名，但源类Adaptee没有方法Request() //因此适配器补充上这个方法名 //但实际上Request()只是调用源类Adaptee的SpecificRequest()方法的内容 //所以适配器只是将SpecificRequest()方法作了一层封装，封装成Target可以调用的Request()而已 @Override public void Request() &#123; this.SpecificRequest(); &#125;&#125;4.测试类123456789public class AdapterPattern &#123; public static void main(String[] args)&#123; Target mAdapter = new Adapter()； mAdapter.Request（）; &#125;&#125;","categories":[{"name":"设计模式","slug":"设计模式","permalink":"http://yoursite.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}],"tags":[]},{"title":"markdown的基本使用","slug":"markdown的基本使用","date":"2019-10-28T03:21:20.000Z","updated":"2019-10-28T07:26:07.950Z","comments":true,"path":"2019/10/28/markdown的基本使用/","link":"","permalink":"http://yoursite.com/2019/10/28/markdown%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","excerpt":"","text":"1. 标题标题用1~6个#号标记，分别代表一级~六级标题，多余6个以上的#自动变成普通文字语法:# 标题名示例:1234567# 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 ####### 普通文字效果图:2. 代码框在代码块两边分别输入三个`语法:```代码块```示例:123public static void main(String[] args)&#123; System.out.println(&quot;hello world&quot;);&#125;3. 代码片在代码块两边分别输入一个`语法:`代码块`示例:out.print(&quot;hello world&quot;)4. 无序列表在语句前添加+,-,*三个字符中的任意一个语法:+ 语句- 语句* 语句示例:无序列表1无序列表2无序列表35. 有序列表直接在语句前添加数字+”.”语法:1. 语句示例:有序列表1有序列表2有序列表36. 引用在要应用的句子前添加&gt;符号语法：&gt;引用类容示例：东临碣石,以观沧海。7. 链接语法：[链接名](链接地址)示例：百度链接8. 图片语法:![图片名](图片地址)示例:","categories":[{"name":"杂记","slug":"杂记","permalink":"http://yoursite.com/categories/%E6%9D%82%E8%AE%B0/"}],"tags":[]}]}